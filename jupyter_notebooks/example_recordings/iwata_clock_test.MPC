\v3 stop tone with poke
\v3.2 monitor port entries AND exits

\INPUTS
^port = 8

\OUTPUTS
^fan = 16
^houselight = 11
^tone1 = 2
^tone2 = 3
^tone3 = 4
^tone4 = 5
^pump = 9
^whitenoise = 1
^laser=10
^csout = 5
^peout = 15
^cs1out = 17
^cs2out = 13
^cs3out = 14

\EXP SETTINGS
^ncsNoShock = 0
^initCS1trials = 3

\ARRAYS
DIM P = 20000 \Port entry time stamp array
DIM Q = 2500 \US delivery time stamp array (absolute)
DIM R = 2500 \US time stamp array (relative to last CS)
DIM W = 2500 \ITI values used for CS
DIM S = 2500 \CS presentation values (absolute - every time light turns on)
DIM G = 2500 \Seconds CS presentation values (seconds on clock every time light turns on)
DIM H = 2500 \Minutes CS presentation values (minutes on clock every time light turns on)
DIM I = 2500 \Hours CS presentation values (hours every time light turns on)
DIM N = 20000 \Port exit time stamp array
DIM K = 2500 \CS type
DIM B = 2500 \shock intensity

LIST V = 80", 90", 80", 75", 100", 95", 90", 80", 90", 100", 90", 120", 90", 85", 90", 95", 120", 80", 95", 80", 90", 80", 75", 100", 95", 90", 80", 90", 100", 90", 120", 90", 85", 90", 95", 90", 80", 90", 100", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90", 90"  \, 100", 108", 117", 121", 133", 145", 165" \CS ITI values (tone + houselight)
LIST E = 120", 80", 95" \CS ITI values for first few trials
LIST M = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 \1 is CS1, 2 is CS2, 3 is CS3
LIST J =0.7, 0.7, 0.7, 0.7 \0.9, 0.9, 0.9, 0.9 \0, 0.3, 0.6, 0.9

\Counter and Flag array
DIM C = 10
\All counters are zero-indexed!! Meaning, if C(0) = 3, there were 4 port entries
\C(0) counter for number of port entries
\C(1) counter for CS presentation number
\C(2) counter for US delivery : this is 1-indexed,  meaning number indicates number of sucrose deliveries
\C(3) flag to indicate if sucrose is in port =0 if no port entry was made, =1 if port entry was made (i.e., no sucrose)
\C(4) counter for number of port exits
\C(5) number of CS1
\C(6) number of CS2
\C(7) number of CS3
\C(8) number of sucrose deliveries
\C(9) number of shock deliveries

\Z-pulses
\Z1: start task after initial delay
\Z2: start of CS
\Z3: port entry
\Z4: port exit
\Z5: trigger CS1
\Z6: trigger CS2
\Z7: trigger CS3
\Z8: turn off all CS triggers
\Z12: INX trigger TTL

\Variables
\A - Time since last CS
\B - Shock intensity
\C - Counter array
\D - Current ITI value
\E - CS ITI values for first few trials
\F - Shock duration
\G - CS_presentation_clock_seconds
\H - CS_presentation_clock_minutes
\I - CS_presentation_clock_hours
\J - Shock intensity repo
\K - CS type
\L -
\M - CS type repo
\N - Port exit time stamp array
\O -
\P - Port entry time stamp array
\Q - Sucrose delivery time stamp array (absolute)
\R - Sucrose delivery time stamp array (relative to last CS)
\S - CS presentation time stamp array
\T - Session timer
\U - Time since last CS presentation
\V - List of CS ITI values (tone + houselight)
\W - ITI values used for CS one each trial
\X -
\Y - Beam break monitor variable
\Z -


DISKVARS = A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z
DISKCOLUMNS = 1

\Detect port entry
S.S.1,
S1,
    #start: SET F = 2000; SET C(3) = 1; Z1 ---> S2


\\\ USE ONLY THIS S2 IF INPUT IS SET TO TOGGLE MODE
\S2,
\    #R^port: Z3 ---> S2

\\\ USE ONLY IF INPUT IS SET TO LEVEL MODE
S2,
    #R^port: ADD Y; IF Y >= 2 [@BeamBreak, @NoBeamBreak]
                 @BeamBreak: Z3; SET Y = 0 ---> S3
                 @NoBeamBreak: ---> SX
    0.02": SET Y = 0 ---> S2
S3,
    0.02": Z4 ---> S2
    #R^port: ---> S3



\After port entry
S.S.2,
S1,
    #Z3: SET P(C(0)) = T; on^peout; SHOW 6, LastPortEntry, P(C(0)); ADD C(0); SET P(C(0)) = -987.987; SET C(3) = 1; SHOW 7, TotalPortEntries, C(0) ---> S1


\\\ USE ONLY IF INPUT IS SET TO LEVEL MODE
\After port exit
S.S.3,
S1,
    #Z4: SET N(C(4)) = T; off^peout; SHOW 1, LastPortExit, N(C(4)); ADD C(4); SET N(C(4)) = -987.987; SHOW 2, TotalPortExits, C(4) ---> S1


\Calculate ITI for CS presentation
S.S.5,
S1,
    #Z1: ---> S2
S2,
    30":  ---> S3  \Initial delay
S3,
    30":  ---> S4
S4,
  D#T:  SET K(C(1)) = 1; SET D = V(C(1)); ADD C(1); SHOW 10, Current ITI, D; Z2 ---> S4

\Turn on CS stimulus
S.S.6,
S1,
    #Z2: on^csout ---> S2
S2,
    0.0001": SHOW 3, CSNumber, C(1); SET S(C(1) - 1) = T; SET G(C(1) - 1) = CURRENTSECONDS; SET H(C(1) - 1) = CURRENTMINUTES; SET I(C(1) - 1) = CURRENTHOURS; SET S(C(1)) = -987.987; SHOW 4, CSpresentationSeconds, G(C(1) - 1);
                IF K(C(1)-1) = 1 [@cs1, @ncs1]
                    @cs1: off^cs1out; on^houselight; ADD C(5); SHOW 8, nCS1, C(5); Z5 ---> S3
                    @ncs2: IF K(C(1)-1) = 2 [@cs2, @cs3]
                        @cs2: on^cs2out; on^houselight; ADD C(6); SHOW 13, nCS2, C(6); Z6 ---> S4
                        @cs3: on^cs3out; ADD C(7); SHOW 18, nCS3, C(7); Z7  ---> S5

S3,
    10": Z8; Z12 ---> S1
S4,
    5": Z8; Z12 ---> S1
S5,
    5": Z8; Z12 ---> S1

S.S.25,
S1,
    #Z12: ---> S2

S2,
    10": off^csout ---> S1

\Deliver US
S.S.7,
S1,
    #Z2:  IF C(3) = 1 [@portEntered, @portNotEntered]
                 @portEntered: SET C(3) = 0 ---> S2      \sucrose
                 @portNotEntered: ---> S1

S2,
    4": on^pump; SET Q(C(2)) = T; SET R(C(2)) = (T - U)*100; SHOW 12, USLatency, R(C(2)); ADD C(2); SET Q(C(2)) = -987.987; SET R(C(2) + 1) = -987.987; ADD C(8); SHOW 11, NumSucroseDeliveries, C(8)  ---> S3         \increment sucrose delivery counter
S3,
    0.5": off^pump ---> S1    \reset "port entered" flag, for C57s
    \1": off^pump ---> S1     \for CD1s

S.S.8,   \CS1
S1,
    #Z5: on^tone1; on^tone2 ---> S1

S.S.9,   \CS2
S1,
    #Z6: on^tone2; on^tone4 ---> S1

S.S.10,   \CS3
S1,
    #Z7: on^tone2; on^tone1; on^tone3 ---> S1

S.S.11,
S1,
    #Z8: off^tone1; off^tone2; off^tone3;off^tone4; on^cs1out; off^cs2out; off^cs3out; off^houselight; SET C(10) = 0 ---> S1


S.S.12,       \Session timer
S1,
    #start: SET T = 0 ---> S2
S2,
    0.01": SET T = T + 0.01 ---> S2


S.S.13,               \Stop session after however many minutes AND EPOCH LASER CONTROL
S1,
    #start: on^cs1out; on^whitenoise; on^houselight; on^laser---> S2 \Laser starts on (on means TTL output is off)
S2,
    0': off^laser--->S3 \ Laser turns off 5 minutes after start
S3,
    5': on^laser--->S4 \ Laser turns on 10 minutes later
S4,
    10': off^laser--->S5 \ Laser turns off 5 minutes later
S5,
    5': on^laser--->S6 \ Laser turns on 10 minutes later
S6,
    360': off^whitenoise; off^houselight ---> stopabortflush \when time is up, store data and turn off everything.
S.S.14,        \On screen clock
S1,
    #start: on^fan ---> S2
S2,
    1": SHOW 5, Clock, T; SET A = (T - U)*100; SHOW 9, TimeFromLastCS, A ---> SX

\Keep time since the start of CS presentation
S.S.15,
S1,
    #Z2: SET U = T ---> S1
